name: .NET Library CI/CD

env:
  PRERELEASE_BRANCHES: experimental,alpha,beta,rc,redpill # Comma separated list of prerelease branch names. 'alpha,rc, ...'
  CASCADES: '' # Comma separated list of cascading repos. 'dolittle/DotNet.SDK,...'
  NUGET_OUTPUT: Artifacts/NuGet
  COVERAGE_FOLDER: Coverage

on:
  push:
    branches:
    - '**'
  pull_request:
    types: [closed]

jobs:
  ci:
    name: CI/CD
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .Net
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.301'
    - name: Build
      run: dotnet build --configuration Release
    - name: Test
      run: dotnet test --configuration Release --no-build
    - name: Establish context
      id: context
      uses: dolittle/establish-context-action@v2
      with:
        prerelease-branches: ${{ env.PRERELEASE_BRANCHES }}
    - name: Increment version
      id: increment-version
      if: ${{ steps.context.outputs.should-publish == 'true' }}
      uses: dolittle/increment-version-action@v2
      with:
        version: ${{ steps.context.outputs.current-version }}
        release-type: ${{ steps.context.outputs.release-type }}

    - name: Create packages
      if: ${{ steps.context.outputs.should-publish == 'true' }}
      run: dotnet pack --no-build --configuration Release -o ${{ env.NUGET_OUTPUT }} /p:PackageVersion=${{ steps.increment-version.outputs.next-version }} -p:IncludeSymbols=true -p:SymbolPackageFormat=snupkg

    - name: Prepend to Changelog
      if: ${{ steps.context.outputs.should-publish == 'true' }}
      uses: dolittle/add-to-changelog-action@v2
      with:
        version: ${{ steps.increment-version.outputs.next-version }}
        body: ${{ steps.context.outputs.pr-body }}
        pr-url: ${{ steps.context.outputs.pr-url }}
        changelog-path: CHANGELOG.md
        user-email: build@dolittle.com
        user-name: dolittle-build

    - name: Create GitHub Release
      uses: dolittle/github-release-action@v2
      if: ${{ steps.context.outputs.should-publish == 'true' }}
      with:
        version: ${{ steps.increment-version.outputs.next-version }}
        body: ${{ steps.context.outputs.pr-body }}

    - name: Push NuGet packages
      if: ${{ steps.context.outputs.should-publish == 'true' }}
      run: dotnet nuget push --skip-duplicate '${{ env.NUGET_OUTPUT }}/*.nupkg' --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json

